version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers-legacy
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:11.1-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: mercately_test
          POSTGRES_PASSWORD: ""
      - image: redis

    steps:
      - checkout

      - run:
          name: Bundle upgrade
          command: gem update bundler

      - run:
          name: Copy database.yml.example to database.yml
          command: cp config/database.yml.example config/database.yml

      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - mercately-bundle-v1-{{ checksum "Gemfile.lock" }}
            - mercately-bundle-v1-

      - run:
          name: Bundle Install
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: mercately-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Database setup
      - run: bin/rails db:schema:load --trace
      - run: bin/rails db:migrate RAILS_ENV=test

      - run:
          name: Run Rubocop
          command: bundle exec rubocop

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run rspec
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 \
                              --color \
                              --order random \
                              --out test-results/rspec/rspec.xml \
                              --format progress \
                              -- ${TESTFILES}
            ./cc-test-reporter after-build -t simplecov --exit-code $? || true
